Question 8

#include <stdio.h>
#include <string.h>
#define SIZE 10
void findMinMaxStr(char word[][40], char *first, char *last,
int size);
int main()
{
 char word[SIZE][40];
 char first[40], last[40];
 int i, size;

 printf("Enter size: \n");
 scanf("%d", &size);
 printf("Enter %d words: \n", size);
 for (i=0; i<size; i++)
 scanf("%s", word[i]);
 findMinMaxStr(word, first, last, size);
 printf("First word = %s, Last word = %s\n", first, last);
 return 0;
}
void findMinMaxStr(char word[][40], char *first, char *last,
int size)
{
    first = word[0];
    last = word[0];
    int i,result;
    for(i = 0; i < size; i++)
    {
        result = strcmp(word[i],word[i+1]);
        if(result > 0)
        {
            last = word[i+1];
            first = first;
        }
        else if(result < 0)
        {
            first = word[i+1];
            last = last;
            
        }
        else
        {
            first = first;
            last = last;
        }
        
    }
 
} 

Question 10
#include <stdio.h>
void strIntersect(char *str1, char *str2, char *str3);
int main()
{
 char str1[50],str2[50],str3[50];

 printf("Enter str1: \n");
 scanf("%s",str1);
 printf("Enter str2: \n");
 scanf("%s",str2);
 strIntersect(str1, str2, str3);
 if (*str3 == '\0')
 printf("strIntersect(): null string\n");
 else
 printf("strIntersect(): %s\n", str3);
 return 0;
}
void strIntersect(char *str1, char *str2, char *str3)
{
    int i,j,k=0,len_1,len_2,len_3;
    char *currLetter;
    len_1 = strlen(str1);
    len_2 = strlen(str2);
    
    for (i = 0; i < len_1; i++)
    {
        currLetter = str1[i];
        for (j = 0; j < len_2; j++)
        {
            if (currLetter = str2[j])
            {
                str3[k] = currLetter;
                k = k+1;
            }
        }
            
    }
    
    
} 


Question 12
#include <stdio.h>
#include <string.h>
#define INIT_VALUE -1 

int countSubstring(char str[], char substr[]);
int main()
{
 char str[80], substr[80], *p;
 int result=INIT_VALUE;

 printf("Enter the string: \n");
 fgets(str, 80, stdin);
 if (p=strchr(str,'\n')) *p = '\0';
 printf("Enter the substring: \n");
 fgets(substr, 80, stdin);
 if (p=strchr(substr,'\n')) *p = '\0';
 result = countSubstring(str, substr);
 printf("countSubstring(): %d\n", result);
 return 0;
}
int countSubstring(char str[], char substr[])
{
    int i , j , len_str , len_substr , count = 0, final = 0;
    len_str = strlen(str);
    len_substr = strlen(substr);
    for (i = 0; i < len_str;)
    {
        j = 0;
        while (str[i] == substr[j] && j < len_substr)
        {
            count++;
            i++;
            j++;
        }
        if (count == len_substr)
        {
            final++; 
            count = 0;
        }
        else
        {

            i = i - count;
            count = 0;
            i++;
        }
    }
    return final;
    
 }
