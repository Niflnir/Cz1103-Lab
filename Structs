#include <stdio.h>
#include <string.h>
#define SIZE 50
typedef struct {
 int id;
 char name[50];
} Student;
void inputStud(Student *s, int size);
void printStud(Student *s, int size);
int removeStud(Student *s, int *size, char *target);
int main()
{
 Student s[SIZE];
 int size=0, choice;
 char target[80], *p;
 int result;

 printf("Select one of the following options: \n");
 printf("1: inputStud()\n");
 printf("2: removeStud()\n");
 printf("3: printStud()\n");
 printf("4: exit()\n");
 do {
 printf("Enter your choice: \n");
 scanf("%d", &choice);
 switch (choice) {
 case 1:
 printf("Enter size: \n");
 scanf("%d", &size);
 printf("Enter %d students: \n", size);
 inputStud(s, size);
 break; 

 case 2:
 printf("Enter name to be removed: \n");
 scanf("\n");
 fgets(target, 80, stdin);
 if (p=strchr(target,'\n')) *p = '\0';
 printf("removeStud(): ");
 result = removeStud(s, &size, target);
 if (result == 0)
 printf("Successfully removed\n");
 else if (result == 1)
 printf("Array is empty\n");
 else if (result == 2)
 printf("The target does not exist\n");
 else
 printf("An error has occurred\n");
 break;
 case 3:
 printStud(s, size);
 break;
 }
 } while (choice < 4);
 return 0;
}
void inputStud(Student *s, int size)
{
    int i;
    char *p;
    for(i = 0; i < size; i++)
    {
        
        printf("Student ID:\n");
        scanf("%d", &s[i].id);
        printf("Student Name:\n");
        scanf("\n");
        fgets(s[i].name, 50, stdin);
        if(p = strchr(s[i].name,'\n')) *p = '\0';
        
    }
}
void printStud(Student *s, int size)
{
    int i;
    printf("The current student list:\n");
    if( size < 1 )
    {
       printf("Empty array\n");
    }
    for(i = 0; i < size; i++)
    {
        printf("Student ID: %d Student Name: %s\n", (s+i)->id, (s+i)->name);
    }
}
int removeStud(Student *s, int *size, char *target)
{

    int i, j, result;
    int init_size = *size;
    if(*size < 1)
    {
        return 1;
    }
    else if(*size > 0)
    {
        for(i = 0; i < *size; i++)
        {
            result = strcmp(target,s[i].name);
            if(result == 0)
            {
                for(j = i; j < (*size) - 1; j++)
                {
                    strcpy(s[j].name, s[j + 1].name);
                    s[j].id = s[j + 1].id ;
                }
                (*size)--;
                
                break;
                
            }
        }

    }
    if (*size < init_size)
        {
            return 0;
        }
    else if(*size == init_size)
        {
            return 2;
        }
}


#include <stdio.h>
#include <string.h>
struct account {
 struct
 {
 char lastName[10];
 char firstName[10];
 } names;
 int accountNum;
 double balance;
};
void nextCustomer(struct account *acct);
void printCustomer(struct account acct);
int main()
{
 struct account record;
 int flag = 0;
 do {
 nextCustomer(&record);
 if ((strcmp(record.names.firstName, "End") == 0) &&
 (strcmp(record.names.lastName, "Customer") == 0))
 flag = 1;
 if (flag != 1)
 printCustomer(record);
 } while (flag != 1);
}
void nextCustomer(struct account *acct)
{
 printf("Enter names (firstName lastName): \n");
 scanf("%s %s", acct->names.firstName, acct->names.lastName);

 if((strcmp(acct->names.firstName, "End") == 0) && (strcmp(acct->names.lastName, "Customer") == 0))
    return;

 printf("Enter account number: \n");
 scanf("%d", &(acct->accountNum));

 printf("Enter balance: \n");
 scanf("%lf", &(acct->balance));
}
void printCustomer(struct account acct)
{
 printf("Customer record: \n");
 printf("%s %s %d %.2lf\n", acct.names.firstName, acct.names.lastName, acct.accountNum, acct.balance);
}

#include <stdio.h>
#include <string.h>
#define MAX 100
typedef struct {
 char name[40];
 char telno[40];
 int id;
 double salary;
} Employee;
void printEmp(Employee *emp, int size);
int readin(Employee *emp);
int search(Employee *emp, int size, char *target);
int addEmployee(Employee *emp, int size, char *target);
int main()
{
 Employee emp[MAX];
 char name[40], *p;
 int size, choice, result;

 printf("Select one of the following options: \n");
 printf("1: readin() \n");
 printf("2: search() \n");
 printf("3: addEmployee() \n");
 printf("4: print() \n");
 printf("5: exit() \n");
 do {
 printf("Enter your choice: \n");
 scanf("%d", &choice);
 switch (choice) {
 case 1:
 size = readin(emp);
 break;
 case 2:
 printf("Enter search name: \n");
 scanf("\n");
 fgets(name, 40, stdin);
 if (p=strchr(name,'\n')) *p = '\0';
 result = search(emp,size,name);
 if (result != 1)
 printf ("Name not found! \n");
 break;
 case 3:
 printf("Enter new name: \n");
 scanf("\n");
 fgets(name, 40, stdin);
 if (p=strchr(name,'\n')) *p = '\0';
 result = search(emp,size,name);
 if (result != 1)
 size = addEmployee(emp, size, name);
 else
 printf("The new name has already existed in the database\n");
 break;
 case 4:
 printEmp(emp, size);
 break;
 default:
 break;
 }
 } while (choice < 5);
 return 0;
} 

void printEmp(Employee *emp, int size)
{
 int i;

 printf("The current employee list: \n");
 if (size==0)
 printf("Empty array\n");
 else
 {
 for (i=0; i<size; i++)
 printf("%s %s %d %.2f\n",emp[i].name,emp[i].telno,emp[i].id,
 emp[i].salary);
 }
}

int readin(Employee *emp)
{
   int i=0 ,*p;
   getchar();
   printf("Enter name:\n");
   fgets(emp[0].name, 40, stdin);
   if(p = strchr(emp[i].name,'\n')) *p = '\0';

   while(strcmp(emp[i].name, "#" ) != 0)
   {
        printf("Enter tel:\n");
        gets(emp[i].telno);
        printf("Enter id:\n");
        scanf("%d", &emp[i].id);
        printf("Enter salary:\n");
        scanf("%lf", &emp[i].salary);

        i++;

        getchar();
        printf("Enter name:\n");
        gets(emp[i].name);
   }

   return i ? i : 0;
}

int search(Employee *emp, int size, char *target)
{
    if (size > MAX)
    {
        return 0;
    }
    int i, result = 0;
    for(i = 0; i< size; i++)
    {
            
        if( strcmp(target,emp[i].name) == 0 )
        {
            printf("Employee found at index location: %d\n", i);
            printf("%s %s %d %.2lf\n", emp[i].name, emp[i].telno, emp[i].id, emp[i].salary);
            result = 1;
            break;
            
        }
    }
    return result;
    
    
}
int addEmployee(Employee *emp, int size, char *target)
{
    (size)++;
    printf("Enter name: ");
    scanf("%s", &emp[size].name);
          
    printf("Enter tel: ");
    scanf("%d", &emp[size].telno);
          
    printf("Enter id: ");
    scanf("*%d", &emp[size].id);
          
    printf("Enter salary: ");
    scanf("%d", &emp[size].salary);
 
}
